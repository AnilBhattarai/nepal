const mongoose = require('mongoose');
const schema = mongoose.Schema;

const userSchema = new schema({
  name: { type: String, required: true },
  email: { type: String, required: true, unique: true },
  password: { type: String, required: true },
  gender: { type: String, enum: ['male', 'female', 'other'] },
  mobile_no: { type: String },
  mobile_prefix: { type: String, default: '+977' },
  avatar: { type: String },
  image: { type: schema.Types.Mixed },
  date_of_birth: { type: Date },
  email_verification_code: { type: String },
  email_verified: { type: Boolean, required: true, default: false },
  email_verified_request_date: { type: Date },
  password_reset_code: { type: String },
  password_reset_request_date: { type: Date },
  last_password_change_date: { type: Date },
  updated_at: { type: Date },
  added_at: { type: Date, default: Date.now, required: true },
  added_by: { type: schema.Types.ObjectId, ref: 'users' },
  is_active: { type: Boolean, required: true, default: false },
  is_added_by_admin: { type: Boolean, require: true, default: false },
  roles: [{ type: [schema.Types.ObjectId], required: true, ref: 'roles' }],
  agent: {
    is_apply: { type: Boolean, required: true, default: false },
    is_verified: { type: Boolean, required: true, default: false },
    updated_at: { type: Date },
    bio: { type: String },
    agency: { type: schema.Types.ObjectId, ref: 'agency' },
    verified_at: { type: Date },
    verified_by: { type: schema.Types.ObjectId, ref: 'users' },
    reason: { type: String },
  },
  builder: {
    is_apply: { type: Boolean, required: true, default: false },
    is_verified: { type: Boolean, required: true, default: false },
    updated_at: { type: Date },
    developer: { type: schema.Types.ObjectId, ref: 'developer' },
    verified_at: { type: Date },
    verified_by: { type: schema.Types.ObjectId, ref: 'users' },
    reason: { type: String },
  },
  bio: { type: String },
  register_method: { type: String },
  skills: { type: [String] },
  description: { type: String },
  is_deleted: {
    type: Boolean,
    default: false,
    required: true,
  },
  author: {
    is_apply: { type: Boolean, required: true, default: false },
    is_verified: { type: Boolean, required: true, default: false },
    updated_at: { type: Date },
    bio: { type: String },
    verified_at: { type: Date },
    verified_by: { type: schema.Types.ObjectId, ref: 'users' },
    reason: { type: String },
  },
  social_link: {
    fb: { type: String },
    twitter: { type: String },
    linkedIn: { type: String },
  },
  bio: { type: String },
  skills: { type: [String] },
  description: { type: String },
  is_deleted: { type: Boolean, default: false, required: true },
  deleted_by: { type: schema.Types.ObjectId },
  deleted_at: { type: Date },
});

module.exports = User = mongoose.model('users', userSchema);
